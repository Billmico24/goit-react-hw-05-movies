{"version":3,"file":"static/js/304.e5efa5e7.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/fetch.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.ul`\n display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 16px;\n  margin-top: 20px;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const GalleryItem = styled.li`\n\n`;\n\nexport const CardWrapper = styled.div`\n  padding: 10px;\n  /* border: 1px solid black; */\n  height: 95%;\n   box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 2px 1px rgba(0, 0, 0, 0.2);\n  \n\n  :hover {\n    transition: all 0.2s ease-in-out;\n   \n    scale: 103%;\n  }\n  \n`;\n\nexport const GalleryLink = styled(Link)`\ntext-decoration: none;`;\n\nexport const GalleryImg = styled.img`\n  width: 100%;\n`;\n\nexport const MovieTitle = styled.p`\ntext-transform: uppercase;\ncolor: black;\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport { Container, CardWrapper, GalleryLink, GalleryImg, MovieTitle } from \"./MoviesList.styled\";\nimport noPoster from './noPoster.jpg';\n\n\nexport const MoviesList = ({movies}) => {\nconst location = useLocation();\n// console.log(location)\n\n    return (\n        <Container>\n            {movies.map(({id, name, title, poster_path}) => (\n                <div key={id}>\n                    <GalleryLink to={`/movies/${id}`} state={{ from: location }}>\n                        <CardWrapper>\n                            <GalleryImg src={\n                                poster_path\n                                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                                    : noPoster} alt={title} />\n                            <MovieTitle>{title || name}</MovieTitle>\n                        </CardWrapper>\n                        </GalleryLink>\n                    \n                </div>            \n    ))}\n        </Container>\n\n    )\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      poster_path: PropTypes.string,\n    }).isRequired\n  )\n};","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  text-align: center;\n`;","import { useState, useEffect } from \"react\";\n\nimport { fetchTrending } from 'services/fetch';\nimport { MoviesList } from \"../../components/MoviesList/MoviesList\";\nimport { Title } from './Home.styled';\n\n\nfunction TrendingMovies() {\n\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        (async function addMovies() {\n      try {\n          const fetchedTrends = await fetchTrending(1);\n          // console.log(fetchedTrends);\n          setMovies([...fetchedTrends.results]);\n      } catch (error) {\n      \n        console.log(error.response.data)\n      }\n    })();\n    }, [])\n\n    return (\n      <>\n        <Title>Trending this week</Title>\n        <MoviesList movies={movies} />\n      </>\n       \n    )\n}\n\nexport default TrendingMovies;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst api_key = '2402629cc235e448b11efcecffc11c17';\nconst params = {\n    trending: 'trending/movie/week',\n    movieID: 'movie/',\n    search: 'search/movie',\n    credits: '/credits',\n    reviews: '/reviews'\n}\n\nexport async function fetchTrending() {\n    const response = await axios.get(`/${params.trending}?api_key=${api_key}`);\n  return response.data;\n  };\n\n\n\nexport async function fetchMovieByID(id) {\n\n  const response = await axios.get(\n    `/movie/${id}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n}\n\n\nexport async function fetchMoviesByQuery(query) {\n  const response = await axios.get(\n    `/${params.search}?api_key=${api_key}&query=${query}&language=en-US&include_adult=false`\n  );\n  return response.data;\n}\n\n\nexport async function fetchCast(id) {\n  const response = await axios.get(\n    `/${params.movieID}${id}${params.credits}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n}\n\n\n\nexport async function fetchReviews(id) {\n  const response = await axios.get(\n    `/${params.movieID}${id}${params.reviews}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n}"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","CardWrapper","_templateObject2","_templateObject3","GalleryLink","Link","_templateObject4","GalleryImg","_templateObject5","MovieTitle","_templateObject6","MoviesList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","name","title","poster_path","to","concat","state","from","_jsxs","src","noPoster","alt","Title","_useState","useState","_useState2","_slicedToArray","setMovies","useEffect","_addMovies","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedTrends","_context","prev","next","fetchTrending","sent","_toConsumableArray","results","t0","console","log","response","data","stop","apply","arguments","_Fragment","axios","api_key","params","_fetchTrending","abrupt","fetchMovieByID","_x","_fetchMovieByID","_callee2","_context2","fetchMoviesByQuery","_x2","_fetchMoviesByQuery","_callee3","query","_context3","fetchCast","_x3","_fetchCast","_callee4","_context4","fetchReviews","_x4","_fetchReviews","_callee5","_context5"],"sourceRoot":""}