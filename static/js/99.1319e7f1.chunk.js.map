{"version":3,"file":"static/js/99.1319e7f1.chunk.js","mappings":"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","sources":["components/Review/Review.styled.js","components/Review/Review.jsx","services/fetch.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  padding-left: 0px;\n`;\nexport const ReviewItem = styled.li`\n  text-align: left;\n  margin-bottom: 40px;\n`;\nexport const ReviewAuthor = styled.h2`\n  font-size: 18px;\n`;\nexport const ReviewText = styled.p`\n  background-color: rgb(245, 245, 245);\n  padding: 20px;\n`;\n\nexport const Error = styled.p`\ntext-align: center;\n`;","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchReviews } from '../../services/fetch';\nimport { nanoid } from 'nanoid';\nimport { ReviewList, ReviewItem, ReviewAuthor, ReviewText, Error } from './Review.styled';\n\nconst Review = () => {\n  const [review, setReview] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function addReviews() {\n      if (movieId) {\n        try {\n          const data = await fetchReviews(movieId);\n          setReview(data.results);\n          return data.results;\n        } catch (error) {\n          console.log(error.response.data)\n        }\n      }\n    }\n    addReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n        {review.length !== 0\n        ? (<ReviewList> \n            {review.map(review => {\n                return (\n                    <ReviewItem key={nanoid(3)}>\n                        <ReviewAuthor>{review.author}</ReviewAuthor>\n                        <ReviewText>{review.content}</ReviewText>\n                    </ReviewItem>\n                );\n            })}\n          </ReviewList>)\n        : (<Error>\n            No reviews information.\n          </Error>)}\n    </>\n  );\n};\nexport default Review;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst api_key = '2402629cc235e448b11efcecffc11c17';\nconst params = {\n    trending: 'trending/movie/week',\n    movieID: 'movie/',\n    search: 'search/movie',\n    credits: '/credits',\n    reviews: '/reviews'\n}\n\nexport async function fetchTrending() {\n    const response = await axios.get(`/${params.trending}?api_key=${api_key}`);\n  return response.data;\n  };\n\n\n\nexport async function fetchMovieByID(id) {\n\n  const response = await axios.get(\n    `/movie/${id}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n}\n\n\nexport async function fetchMoviesByQuery(query) {\n  const response = await axios.get(\n    `/${params.search}?api_key=${api_key}&query=${query}&language=en-US&include_adult=false`\n  );\n  return response.data;\n}\n\n\nexport async function fetchCast(id) {\n  const response = await axios.get(\n    `/${params.movieID}${id}${params.credits}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n}\n\n\n\nexport async function fetchReviews(id) {\n  const response = await axios.get(\n    `/${params.movieID}${id}${params.reviews}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n}","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["ReviewList","styled","_templateObject","_taggedTemplateLiteral","ReviewItem","_templateObject2","ReviewAuthor","_templateObject3","ReviewText","_templateObject4","Error","_templateObject5","_useState","useState","_useState2","_slicedToArray","review","setReview","movieId","useParams","useEffect","_addReviews","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchReviews","sent","results","abrupt","t0","console","log","response","stop","apply","arguments","addReviews","_jsx","_Fragment","children","length","map","_jsxs","author","content","nanoid","axios","api_key","params","fetchTrending","_fetchTrending","concat","fetchMovieByID","_x","_fetchMovieByID","_callee2","id","_context2","fetchMoviesByQuery","_x2","_fetchMoviesByQuery","_callee3","query","_context3","fetchCast","_x3","_fetchCast","_callee4","_context4","_x4","_fetchReviews","_callee5","_context5","size","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}